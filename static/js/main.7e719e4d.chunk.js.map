{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","style","stats","stats__item","label","FeedbackOptions","options","onLeaveFeedback","styles","feedback","description","onClick","map","but","type","btn","Section","title","children","Notification","message","App","state","handleClick","e","target","nodeName","buttonType","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iUAGe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIC,UAAWC,IAAMC,MAArB,UACE,qBAAIF,UAAWC,IAAME,YAArB,UACE,sBAAMH,UAAWC,IAAMG,MAAvB,kBACA,uBAAMJ,UAAU,WAAhB,eAA8BL,QAEhC,qBAAIK,UAAWC,IAAME,YAArB,UACE,sBAAMH,UAAWC,IAAMG,MAAvB,qBACA,uBAAMJ,UAAU,WAAhB,eAA8BJ,QAEhC,qBAAII,UAAWC,IAAME,YAArB,UACE,sBAAMH,UAAWC,IAAMG,MAAvB,iBACA,uBAAMJ,UAAU,WAAhB,eAA8BH,QAEhC,qBAAIG,UAAWC,IAAME,YAArB,UACE,sBAAMH,UAAWC,IAAMG,MAAvB,mBACA,uBAAMJ,UAAU,WAAhB,eAA8BF,QAEhC,qBAAIE,UAAWC,IAAME,YAArB,UACE,sBAAMH,UAAWC,IAAMG,MAAvB,+BACA,uBAAMJ,UAAU,WAAhB,eAA8BD,EAA9B,a,oBC5BO,SAASM,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKP,UAAWQ,IAAOC,SAAvB,SACE,qBAAKT,UAAWQ,IAAOE,YAAaC,QAASJ,EAA7C,SACGD,EAAQM,KAAI,SAACC,GAAD,OACX,wBAEE,YAAWA,EACXC,KAAK,SACLd,UAAWQ,IAAOO,IAJpB,SAMGF,GALIA,UCPF,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICMPC,E,4MACJC,MAAQ,CAAE3B,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EACpC0B,YAAc,SAACC,GACb,GAA0B,WAAtBA,EAAEC,OAAOC,SAAb,CAGA,IAAIC,EAAaH,EAAEC,OAAOG,QAAQd,KAClC,EAAKe,UAAS,SAACC,GAAD,sBACXH,EAAaG,EAAUH,GAAc,Q,EAG1CI,mBAAqB,WACnB,OAAO,EAAKT,MAAM3B,KAAO,EAAK2B,MAAM1B,QAAU,EAAK0B,MAAMzB,K,EAG3DmC,gCAAkC,WAChC,OAAkC,IAA9B,EAAKD,qBACA,EAEFE,KAAKC,MAAO,EAAKZ,MAAM3B,KAAO,EAAKoC,qBAAwB,M,4CAEpE,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,eAACgB,EAAD,CAASC,MAAM,wBAAf,UACE,cAACZ,EAAD,CACEC,QAAS6B,OAAOC,KAAKC,KAAKf,OAC1Bf,gBAAiB8B,KAAKd,cACrB,OAEL,cAACP,EAAD,CAASC,MAAM,aAAf,SACGoB,KAAKN,qBACJ,cAACrC,EAAD,CACEC,KAAM0C,KAAKf,MAAM3B,KACjBC,QAASyC,KAAKf,MAAM1B,QACpBC,IAAKwC,KAAKf,MAAMzB,IAChBC,MAAOuC,KAAKN,qBACZhC,mBAAoBsC,KAAKL,oCAG3B,cAACb,EAAD,CAAcC,QAAQ,+B,GAxChBkB,IAAMC,WAgDTlB,ICnDfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.7e719e4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={style.stats}>\r\n      <li className={style.stats__item}>\r\n        <span className={style.label}>Good</span>\r\n        <span className=\"quantity\">: {good}</span>\r\n      </li>\r\n      <li className={style.stats__item}>\r\n        <span className={style.label}>Neutral</span>\r\n        <span className=\"quantity\">: {neutral}</span>\r\n      </li>\r\n      <li className={style.stats__item}>\r\n        <span className={style.label}>Bad</span>\r\n        <span className=\"quantity\">: {bad}</span>\r\n      </li>\r\n      <li className={style.stats__item}>\r\n        <span className={style.label}>Total</span>\r\n        <span className=\"quantity\">: {total}</span>\r\n      </li>\r\n      <li className={style.stats__item}>\r\n        <span className={style.label}>Positive feedback</span>\r\n        <span className=\"quantity\">: {positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={styles.feedback}>\r\n      <div className={styles.description} onClick={onLeaveFeedback}>\r\n        {options.map((but) => (\r\n          <button\r\n            key={but}\r\n            data-type={but}\r\n            type=\"button\"\r\n            className={styles.btn}\r\n          >\r\n            {but}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\n// import stats from \"./data/state.json\";\n\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nclass App extends React.Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n  handleClick = (e) => {\n    if (e.target.nodeName !== \"BUTTON\") {\n      return;\n    }\n    let buttonType = e.target.dataset.type;\n    this.setState((prevState) => ({\n      [buttonType]: prevState[buttonType] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.countTotalFeedback() === 0) {\n      return 0;\n    }\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleClick}\n          />{\" \"}\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn___o2cM\"};"],"sourceRoot":""}